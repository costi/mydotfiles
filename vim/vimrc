" -----------------------------------------------------------------------------  
" |                            VIM Settings                                   |
" |                   (see gvimrc for gui vim settings)                       |
" |                                                                           |
" | Some highlights:                                                          |
" |                                                                           |
" | jj = <esc>  Very useful for keeping your hands on the home row            |
" |                                                                           |
" | ,h = new horizontal window                                                |
" | ,v = new vertical window                                                  |
" | ,w = switches to the next window                                          |
" |                                                                           |
" | ,n = toggles NERDTree                                                     |
" |                                                                           |
" | ,o = open url under the cursor in the default browser                     |
" |                                                                           |
" | ,t = FuzzyFinder TextMate                                                 |
" | ,b = FuzzyFinder TextMate your buffer                                     |
" |                                                                           |
" | ,F = Ack in Project                                                       |
" |                                                                           |
" | ,T = toggles tags list                                                    |
" |                                                                           |
" | ,R = Runs focused Ruby Test::Unit or Rspec                                |
" | ,r = Runs all the tests in the file                                       |
" |                                                                           |
" | ,c<space> = toggles commenting the current line                           |
" |                                                                           |
" | "+y = in visual mode, cuts highlighted line to the OSX clipboard          |
" |                                                                           |
" | spacebar = toggles highlighted search results after a word search         |
" |                                                                           |
" | control + "_" = completes the nearest unclosed tag                        |
" -----------------------------------------------------------------------------  

let mapleader = ","
set nocompatible
filetype plugin indent on " Enable filetype-specific indenting and plugins
set showmatch             "sm:    flashes matching brackets or parentheses
set smarttab              "sta:   helps with backspacing because of expandtab
set cursorline
set hidden
syntax on " syntax highlighting

" Use Ack instead of Grep
set grepprg=ack
set grepformat=%f:%l:%m


" Tabs ************************************************************************
" Use 2 spaces
set tabstop=2
set shiftwidth=2
set autoindent
set expandtab
set backspace=start,indent,eol
autocmd FileType make     set noexpandtab
autocmd FileType python   set noexpandtab


" Scrollbars ******************************************************************
set sidescrolloff=2
set numberwidth=4


" Windows *********************************************************************
set equalalways " Multiple windows, when created, are equal in size
set splitbelow splitright
" split vertically with <leader> v
nmap <leader>v :vsplit<CR> <C-w><C-w>
" split horizontally with <leader> s
nmap <leader>s :split<CR> <C-w><C-w>
" Make it way easier to switch windows (<leader>w)
nmap <leader>w <C-w><C-w>_


"jump to last cursor position when opening a file
"dont do it when writing a commit log entry
autocmd BufReadPost * call SetCursorPosition()
function! SetCursorPosition()
  if &filetype !~ 'commit\c'
    if line("'\"") > 0 && line("'\"") <= line("$")
     exe "normal g`\""
    endif
  end
endfunction


" Searching *******************************************************************
set hlsearch  " highlight search
set incsearch  " incremental search, search as you type
set ignorecase " Ignore case when searching 
set smartcase " Ignore case when searching lowercase
" Press Space to turn off highlighting and clear any message already displayed.
:noremap <silent> <Space> :silent noh<Bar>echo<CR>


" Colors **********************************************************************
set background=dark 
colorscheme ir_black 

" Status Line *****************************************************************
set laststatus=2
set statusline=%F%m%r%h%w[%L][%{&ff}]%y[%p%%][%04l,%04v]
"set showcmd
"set ruler 


" Line Wrapping ***************************************************************
set wrap
set linebreak  " Wrap at word


" Mappings ********************************************************************
" Professor VIM says '87% of users prefer jj over esc', jj abrams strongly disagrees
imap jj <Esc>


" Sessions ********************************************************************
" Sets what is saved when you save a session
set sessionoptions=blank,buffers,curdir,folds,help,resize,tabpages,winsize


" Misc ************************************************************************
set number " Show line numbers
set matchpairs+=<:>
set vb t_vb= " Turn off the bell, this could be more annoying, but I'm not sure how
set clipboard+=unnamed  " Yanks go on clipboard instead.
set scrolloff=10 " Keep 10 lines below and above the cursor


" Directories *****************************************************************
" Setup backup location and enable
set backupdir=~/.backup//
set backup
 
" Set Swap directory
set directory=~/.backup//


" FuzzyFinder Textmate
let g:fuzzy_matching_limit = 60 
let g:fuzzy_ceiling = 20000     " I have some projects with a lot of files...
let g:fuzzy_ignore = "*.log"
let g:fuzzy_roots = ['./etc', './ruby', './test'] 
map <leader>t :FuzzyFinderTextMate<CR>
map <leader>b :FuzzyFinderBuffer<CR>


" binds ,T to taglist (sorta like textmate apple-shift-t)
map <leader>T :TlistToggle<CR>
let Tlist_Show_Menu=1
let Tlist_GainFocus_On_ToggleOpen=1
let Tlist_Close_OnSelect=1
let Tlist_Compact_Format=1


" NERD Tree
nmap <silent> <Leader>n :NERDTreeToggle<CR>


" Open a web-browser with the URL in the current line
"function! HandleURI()
  "let s:uri = matchstr(getline("."), '[a-z]*:\/\/[^ >,;]*')
  "echo s:uri
  "if s:uri != ""
		"exec "!open \"" . s:uri . "\""
  "else
		"echo "No URI found in line."
  "endif
"endfunction
"map <Leader>o :call HandleURI()<CR>


" ,F to startup an ack search
map <leader>F :Ack<space>


" Navigating Long Lines that Wrap
" move by display line
nnoremap k gk
nnoremap j gj
nnoremap gk k
nnoremap gj j

map <Leader>R <Plug>RubyTestRun
map <Leader>r <Plug>RubyFileRun
